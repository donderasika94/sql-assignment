1.	Display all departments from department table
mysql> Select * from departments;

2.	Display all employees from employee table.
mysql> SELECT * FROM employees;

3.	Select the employee in department 30.
mysql> select employee_id,last_name,department_id
    -> from employees
    -> where department_id = 30;
	
4.	List the names, numbers and departmentno of all clerks.
mysql> SELECT last_name, phone_number,department_id, job_id
    -> FROM employees
    -> WHERE job_id like "%CLERK";
	
5.	Find the depart numbers and the name of employee of all dept with Deptno greater or equal to 20.
mysql> SELECT last_name, department_id
    -> FROM employees
    -> WHERE department_id >=20;
	
9.	List the name, job and salary of all employees in dept 20 who earn more than 2000.
mysql> SELECT last_name, job_id, salary, department_id
    -> FROM employees
    -> WHERE department_id = 20
    -> AND salary >2000;
	
12.	Find all managers who are not in dept 30
mysql> SELECT last_name, job_id, department_id
    -> FROM employees
    -> WHERE department_id <>30
    -> AND job_id LIKE "%MAN";
	
14.	Find the details of all manager (in any dept)
mysql> SELECT job_id, department_id
    -> FROM employees
    -> WHERE job_id LIKE "%MAN";
	
17.	Find the employees who earns between Rs. 1200 and Rs.1400.
mysql> SELECT salary
    -> from employees
    -> where salary = 1200
    -> ;
Empty set (0.00 sec)

20.	Find the employees who do not receive a commission i.e. commission is NULL.
mysql> SELECT employee_id, job_id, commission_pct
    -> FROM employees
    -> WHERE commission_pct IS NULL;
	
21.	Find the employee whose commission is Rs. 0.
mysql> SELECT employee_id, commission_pct
    -> FROM employees
    -> WHERE commission_pct = 0;
Empty set (0.00 sec)

22.	Find the different jobs of the employees receiving commission.
mysql> SELECT employee_id, job_id, commission_pct
    -> FROM employees
    -> WHERE commission_pct IS NOT NULL;

25.	Find all employees whose total earnings are greater than Rs. 2000.
mysql> SELECT employee_id, first_name, salary
    -> FROM employees
    ->  WHERE salary >2000;
	
26.	Find all employees whose names begin with m.
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE first_name LIKE "M%";
	
27.	Find all employees whose names end with m.
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE first_name LIKE "%m";
	
28.	Find all employees whose names contain the letter m.
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE first_name LIKE "%m%";
	
29.	Find the employees whose names are 5 characters long and end with n.
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE length(first_name)=5
    -> AND first_name LIKE "%n";
	
30.	Find the employees who have the letter r as the third letter in their name.
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE first_name LIKE "__r%";

31.	Find all employees hired in month of February (of any year).
mysql> SELECT employee_id, last_name, hire_date
    -> FROM employees
    -> WHERE MONTH(hire_date)=02;
	
32.	Find all employees who were hired on the last day of the month. 


34.	Find the managers hired in the year 2007.
mysql> SELECT employee_id, last_name, hire_date, job_id
    -> FROM employees
    -> WHERE last_day(hire_date)=2007
    -> AND job_id LIKE "%MAN";
Empty set (0.00 sec)

35.	Display the names and the jobs of all employees, separated by ','(comma). For example (smith, clerk).
mysql> SELECT CONCAT(first_name,',',job_id) AS Concatstring
    -> FROM employees;

36.	Display the names of all employees with the initial letter only in capitals.
mysql> SELECT CONCAT(UCASE(LEFT(first_name, 1)),SUBSTRING(first_name,2))AS First_name, CONCAT(UCASE(LEFT(last_name,1)),SUBSTRING(last_name,2))AS Last_name
    -> FROM employees;

37.	Display the names of all employees, right aligning them to 15 characters.
mysql> SELECT RIGHT(first_name,15) AS Right_aligning
    -> FROM employees;

38.	Display the names of all employees, padding them to right up-to 15 characters with '-'.
mysql> SELECT RPAD(first_name,15,'-') AS Rightpadfirst_name
    -> FROM employees;
	
39.	Display the length of the name of all employees.
mysql> SELECT first_name, length(first_name) AS length_first_name
    ->  FROM employees;
	
41.	Display the names of all employees without any leading 'a'.
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE first_name NOT LIKE "A%";

42.	Display the names of all employees without any trailing 'r'.	
mysql> SELECT employee_id, first_name
    -> FROM employees
    -> WHERE first_name NOT LIKE "%r";

43.	Show the first three characters of the names of all employees.	
mysql> SELECT first_name, SUBSTRING(first_name,1,3) AS Substring_first_name
    -> FROM employees;

45.	Display the names of all employees replacing any 'a' with 'e'.
mysql> SELECT first_name, REPLACE(first_name, 'a', 'e')AS Replacename_atoe
    -> FROM employees;

46.	Display the names of all employees and the position at which the string 'ar' occurs in the name.
mysql> SELECT first_name,  POSITION("ar" IN first_name)AS Position_of_ar
    -> FROM employees
    -> WHERE first_name LIKE "%ar%";

47.	Show the salary of all employees rounding it to the nearest Rs. 1000. For example (3790 will be 4000)

48.	Show the daily salary of all employees assuming a month has 30 days
mysql> SELECT first_name, ROUND((salary/12)/30) AS Daily_salary
    -> FROM employees;

49.	Display the name of all employees, and their bonus. Assume each Employee gets a bonus of 20 percent of his salary subject to the Maximum of Rs. 500
mysql> SELECT employee_id, first_name, (salary*0.20)AS Bonus
    -> FROM employees
    -> WHERE (salary*0.20)<500;

50.	Display the name of all employees, and their bonus. Assume each employee gets a bonus of 20 percent of his salary subject to the Maximum of Rs. 200
mysql> SELECT employee_id, first_name, (salary*0.20)AS Bonus
    -> FROM employees
    -> WHERE (salary*0.20)<200;
Empty set (0.00 sec)

51.	For each employee display the number of days passed since the employee joined the company.
mysql> SELECT DATEDIFF("2019-02-28", hire_date) AS Dayspassed_fromjoining
    -> FROM employees;

52.	For each employee display the number of months passed since the Employee joined the company.
mysql> SELECT TIMESTAMPDIFF(MONTH, hire_date,'2019-03-01')AS Months_passed
    -> FROM employees;

55.	Display the details of all employees, sorted on the names.
mysql> SELECT first_name, last_name, salary,department_id, hire_date
    -> FROM employees
    -> GROUP BY first_name;

57.	Display the names, job and salary of all employees sorted on jobs and Salary
mysql> SELECT first_name, job_id,salary
    -> FROM employees
    -> GROUP BY job_id;

58.	Display the names, job and salary of all employees, sorted on jobs and within job, sorted on the descending order of salary.
mysql> SELECT first_name, job_id, salary
    -> FROM employees
    -> GROUP BY job_id
    -> ORDER BY 3 DESC;

59.	Display the names, job and salary of all employees, sorted on Descending order of job and within job, sorted on the descending order of salary
mysql> SELECT first_name, job_id, salary
    -> FROM employees
    -> ORDER BY job_id desc, salary desc;

60.    Display the name, month and year of all employees, sorted on the month of their hire date irrespective of the year.
mysql> SELECT first_name, MONTH(hire_date), YEAR(hire_date)
    -> FROM employees
    -> ORDER BY MONTH(hire_date);



	

	

